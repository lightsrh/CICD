name: CI
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on:
  [push]

jobs:

  # Lancement du linter, analyse le code source pour trouver bugs, erreur de syntaxe etc...
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: 🖥️ Check out the repository
      uses: actions/checkout@v4

    - name: Install flake8
      run: python -m pip install flake8

    - name: 🐧 Launching the lint
      run: |
        echo "Lint with flake8"
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  # Lancement des test, écris dans le fichier ./app/test_app.py 
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: city_api
          POSTGRES_USER: city_api
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432

    steps:
    - name: 🖥️ Check out the repository
      uses: actions/checkout@v4

    - name: 🍏 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12.2'  # Version qu'on utilise

    - name: Setting up the environment
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install -r requirements.txt

    - name: Verify psycopg2 installation
      run: |
        source .venv/bin/activate
        pip show psycopg2-binary

    - name: Wait for PostgreSQL to be ready
      run: |
        until pg_isready -h localhost -p 5432; do
        sleep 1
        done

    - name: Setup .pgpass file
      run: |
        echo "localhost:5432:city_api:city_api:${{ secrets.POSTGRES_PASSWORD }}" > ~/.pgpass
        chmod 600 ~/.pgpass

    - name: Reset the database
      run: |
        psql -h localhost -U city_api -c "DROP DATABASE IF EXISTS city_api;"
        psql -h localhost -U city_api -c "CREATE DATABASE city_api;"

    - name: Launching the database
      run: |
        source .venv/bin/activate
        ./init.sh
      env:
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        POSTGRES_DB: city_api
        POSTGRES_USER: city_api

    - name: Launching the pytest
      run: |
        source .venv/bin/activate
        echo "Test with pytest"
        pytest

    - name: 🎉 We are done !!
      run: echo "The end"
